@page "/maps/mostplayed"
@using Humanizer
@model MostPlayedMapsModel

@{
    ViewData["Title"] = "Most played maps";
}

<div class="xl:container mx-auto flex flex-col justify-center text-center w-full">
    <div class="flex flex-col lg:flex-row lg:justify-between">
        <div class="text-3xl ml-0 text-center lg:ml-2 xl:ml-0 lg:text-left">
            @ViewData["Title"]
            <br/>
            <span class="text-sm">out of (estimated) <b>@Model.TotalCount</b> beatmaps ever downloaded</span>
        </div>
        <br class="inline lg:hidden" />
        <form class="justify-center justify-self-end" method="POST" autocomplete="off">
            <input
                name="beatmap"
                class="text-center w-1/2 lg:w-full rounded-lg p-4 border-2 mr-0 lg:mr-2 xl:mr-0 text-black @(Model.InvalidBeatmap ? "border-red-500" : "border-gray-300")"
                placeholder="Enter a @(Model.InvalidBeatmap ? "valid beatmap" : "beatmap") hash"/>
        </form>
    </div>
    <br/>
    <div class="text-xs text-center xl:text-left">
        Last updated <b>@((DateTime.Now - Model.MostPlayedMaps.Item2).Humanize())</b> ago.
    </div>
    <table class="mt-4 table-fixed w-full border-collapse">
        <thead>
        <tr>
            <th class="border border-green-900 w-1/2">Title</th>
            <th class="border border-green-900 w-1/12">Star rating</th>
            <th class="border border-green-900 w-1/12">CS</th>
            <th class="border border-green-900 w-1/12">AR</th>
            <th class="border border-green-900 w-1/12">OD</th>
            <th class="border border-green-900 w-1/12">HP</th>
            <th class="border border-green-900 w-1/12">Length</th>
            <th class="border border-green-900 w-1/12">BPM</th>
            <th class="border border-green-900 w-1/12">Max combo</th>
            <th class="border border-green-900 w-1/12">Count</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var (hash, count) in Model.MostPlayedMaps.Item1)
        {
            var beatmap = Model.Maps.TryGetValue(hash, out var map) ? map : null;

            <tr>
                @{
                    <td class="border border-green-200 p-2 w-1/2 @(beatmap == null ? "bg-yellow-200" : "")">
                        <a href="/replays/map/@hash"
                           class="underline text-black hover:text-blue-800 visited:text-purple-600">
                            @if (beatmap != null)
                            {
                                <span>
                                    @beatmap.Title <b>[@beatmap.Difficulty]</b>
                                </span>
                            }
                            else
                            {
                                <span>Custom map</span>
                            }

                        </a>
                    </td>
                }
                <td class="border border-green-200 p-0 w-1/12">@($"{beatmap?.StarRating:F2}")</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.CircleSize)</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.ApproachRate)</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.OverallDifficulty)</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.HpDrain)</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.TotalLength.ToString(@"mm\:ss"))</td>
                <td class="border border-green-200 p-0 w-1/12">@($"{beatmap?.Bpm:0.##}")</td>
                <td class="border border-green-200 p-0 w-1/12">@(beatmap?.MaxCombo)</td>
                <td class="border border-green-200 p-0 w-1/12 bg-green-100">@count</td>
            </tr>
        }
        </tbody>
    </table>
</div>